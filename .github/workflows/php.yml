name: build

on:
  push:
    branches: [ stable, development ]
  pull_request:
    branches: [ stable, development ]

jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        php: [7.4, 8.0]
        experimental: [false]

    steps:
    - uses: actions/checkout@v2

    - name: Setup PHP Action
      uses: shivammathur/setup-php@2.16.0
      with:
        php-version: ${{ matrix.php }}
        coverage: xdebug

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
          
    - name: Install dependencies with Composer
      uses: ramsey/composer-install@v1
        
    - name: Run unit tests
      run: php vendor/bin/codecept run unit
      
    - name: Run Codecept coverage
      run: php vendor/bin/codecept run --coverage --coverage-xml --coverage-phpunit

    - name: Download artifacts
      uses: actions/download-artifact@v2

    - name: Codecov
      uses: codecov/codecov-action@v2.1.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./tests/_output
        files: ./tests/_output/coverage.xml
        flags: unittests
        verbose: true
        fail_ci_if_error: true
